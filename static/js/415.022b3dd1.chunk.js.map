{"version":3,"file":"static/js/415.022b3dd1.chunk.js","mappings":"8NAGaA,EAAWC,EAAAA,GAAAA,GAAH,0JAURC,EAAYD,EAAAA,GAAAA,GAAH,2DAKTE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kDAIRI,EAAaJ,EAAAA,GAAAA,IAAH,wNAYVK,EAASL,EAAAA,GAAAA,IAAH,yDAKNM,EAAQN,EAAAA,GAAAA,GAAH,qK,SCLlB,EAxBmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACV,EAAD,WACE,UAACC,EAAD,CAAUU,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAApD,WACE,SAACJ,EAAD,WACE,SAACC,EAAD,CACEW,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAKP,EAAMQ,WAGf,SAACb,EAAD,UAAQK,EAAMQ,YARFR,EAAME,GADP,OAgBxB,C,yHCLD,UAvBa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAIdJ,GAAU,OAAII,EAAKC,UAJL,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDASfL,GACD,GAAE,KAED,iCACE,4CACA,SAAC,IAAD,CAAYhB,OAAQA,MAGzB,C,kMCvBYsB,EAAU,mCACvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAGP,IAAML,EAAiB,mCAAG,+GAENM,EAAAA,EAAAA,IAAU,sBAFJ,uBAErBL,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,gCAK7BE,QAAQC,IAAR,MAL6B,yDAAH,qDASjBI,EAAY,mCAAG,WAAMC,GAAN,kGAEDH,EAAAA,EAAAA,IAAU,eAAgB,CAC/CI,OAAQ,CACND,MAAOA,KAJa,uBAEhBR,EAFgB,EAEhBA,KAFgB,kBAOjBA,EAAKC,SAPY,gCASxBC,QAAQC,IAAR,MATwB,yDAAH,sDAaZO,EAAY,mCAAG,WAAMC,GAAN,kGAEDN,EAAAA,EAAAA,IAAA,gBAAmBM,IAFlB,uBAEhBX,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZS,EAAO,mCAAG,WAAMD,GAAN,kGAEIN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aAFJ,uBAEXX,EAFW,EAEXA,KAFW,kBAGZA,EAAKa,MAHO,gCAKnBX,QAAQC,IAAR,MALmB,yDAAH,sDASPW,EAAU,mCAAG,WAAMH,GAAN,kGAECN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,aAFD,uBAEdX,EAFc,EAEdA,KAFc,kBAGfA,EAAKC,SAHU,gCAKtBC,QAAQC,IAAR,MALsB,yDAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  width: 230px;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ImgWrapper = styled.div`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 5px;\n  width: 200px;\n  height: 300px;\n  transition: all 0.3s ease-in-out;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  padding: 0 6px;\n  text-align: center;\n  color: black;\n  border-bottom: none;\n  :hover {\n    color: #44a9ed;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  ItemList,\n  ItemLink,\n  MovieItem,\n  ImgWrapper,\n  Poster,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ItemList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <ItemLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              </ImgWrapper>\n              <Title>{movie.title}</Title>\n            </ItemLink>\n          </MovieItem>\n        ))}\n      </ItemList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  // console.log(movies);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        // console.log(...data.results);\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, []);\n  return (\n    <>\n      <h2>Trending today</h2>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const API_KEY = '8a5752e4abef75f2eb883e6eab6ac34d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ItemList","styled","MovieItem","ItemLink","Link","ImgWrapper","Poster","Title","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","useState","setMovies","useEffect","getMovies","getTrendingMovies","data","results","console","log","API_KEY","axios","api_key","searchMovies","query","params","getFullMovie","movieId","getCast","cast","getReviews"],"sourceRoot":""}