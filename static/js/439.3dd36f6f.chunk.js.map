{"version":3,"file":"static/js/439.3dd36f6f.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  padding: 8px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: white;\n  color: black;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: orangered;\n    color: white;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"14\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieDescriptionContainer = styled.div`\n  display: flex;\n`;\nexport const TextContainer = styled.div`\n  display: block;\n  padding: 15px;\n`;\n","import noImage from '../../NoImages/NoImage.png';\nimport {\n  MovieDescriptionContainer,\n  TextContainer,\n} from './MovieDescription.styled';\n\nconst MovieDescription = ({ movieDetails }) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    movieDetails;\n\n  const movieFullYear = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average).toFixed(1);\n  const imageURL = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <MovieDescriptionContainer>\n      <img\n        src={poster_path ? `${imageURL}${poster_path}` : noImage}\n        alt={title}\n      />\n      <TextContainer>\n        <h3>\n          {title} ({movieFullYear})\n        </h3>\n        <p>User Score: {userScore}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n      </TextContainer>\n    </MovieDescriptionContainer>\n  );\n};\n\nexport default MovieDescription;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const ItemLink = styled(Link)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: white;\n  background-color: orangered;\n`;\n","import Notiflix from 'notiflix';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { getFullMovie } from 'services/api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\n\nimport { AdditionalList, ItemLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDeatils] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const renderMovieDetails = async () => {\n      try {\n        const results = await getFullMovie(movieId);\n        if (!results) {\n          Notiflix.Notify.warning(\n            'Вибачте, за вашим запитом немає відповідних результатів!'\n          );\n          return;\n        }\n        setMovieDeatils(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure(\n          'На жаль, немає фільмів, які відповідають вашому запиту. Спробуйте ще раз!'\n        );\n      }\n    };\n    renderMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <main>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        {movieDetails && <MovieDescription movieDetails={movieDetails} />}\n      </main>\n      <div>\n        <AdditionalList>\n          <li>\n            <ItemLink to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </ItemLink>\n          </li>\n          <li>\n            <ItemLink to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </ItemLink>\n          </li>\n        </AdditionalList>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const API_KEY = '8a5752e4abef75f2eb883e6eab6ac34d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","MovieDescriptionContainer","TextContainer","movieDetails","poster_path","release_date","title","vote_average","overview","genres","movieFullYear","Date","getFullYear","userScore","Math","round","toFixed","src","noImage","alt","map","genre","name","join","AdditionalList","ItemLink","useState","setMovieDeatils","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","renderMovieDetails","getFullMovie","results","Notiflix","Suspense","fallback","message","API_KEY","axios","api_key","getTrendingMovies","data","console","log","searchMovies","query","params","getCast","cast","getReviews"],"sourceRoot":""}