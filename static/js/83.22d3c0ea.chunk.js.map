{"version":3,"file":"static/js/83.22d3c0ea.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"rgb(63, 81, 181)\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n      visible={true}\n    />\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  width: 230px;\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ImgWrapper = styled.div`\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 5px;\n  width: 200px;\n  height: 300px;\n  transition: all 0.3s ease-in-out;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  padding: 0 6px;\n  text-align: center;\n  color: black;\n  border-bottom: none;\n  :hover {\n    color: #44a9ed;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  ItemList,\n  ItemLink,\n  MovieItem,\n  ImgWrapper,\n  Poster,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ItemList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <ItemLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              </ImgWrapper>\n              <Title>{movie.title}</Title>\n            </ItemLink>\n          </MovieItem>\n        ))}\n      </ItemList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n  padding: 5px;\n  border-radius: 5px;\n  border: 2px solid orangered;\n  font: inherit;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  height: 35px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-left: 4px;\n  justify-content: center;\n  border: none;\n  text-decoration: none;\n  background-color: orangered;\n  color: white;\n  cursor: pointer;\n\n  font-weight: 500;\n`;\n","import { Form, Input, SearchButton } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"movieName\"\n          autoComplete=\"off\"\n          value={value}\n          placeholder=\"Search movies\"\n          onChange={onChange}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </Form>\n    </div>\n  );\n};\n","import Notiflix from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { searchMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [request, setRequest] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const nextParams = request !== '' ? { query: request } : {};\n  const handleNameChange = e => {\n    setRequest(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (request.trim() === '') {\n      Notiflix.Notify.warning('Будь ласка, введіть запит!');\n      return;\n    }\n\n    setMovies([]);\n    setRequest('');\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    const renderMovies = async () => {\n      setLoading(true);\n\n      try {\n        const results = await searchMovies(movieName);\n        if (results.length === 0) {\n          Notiflix.Notify.failure('Щось пішло не так. Повторіть спробу!');\n          return;\n        }\n        setMovies(results);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure(\n          'На жаль, немає фільмів, які відповідають вашому запиту. Спробуйте ще раз!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderMovies();\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBox\n        onSubmit={handleSubmit}\n        value={request}\n        onChange={handleNameChange}\n      />\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n      {error && <p>{error.message}</p>}\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const API_KEY = '8a5752e4abef75f2eb883e6eab6ac34d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\naxios.defaults.params = {\n  api_key: `${API_KEY}`,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullMovie = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","marginLeft","marginRight","visible","ItemList","styled","MovieItem","ItemLink","Link","ImgWrapper","Poster","Title","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","Form","Input","SearchButton","SearchBox","value","onChange","onSubmit","type","name","autoComplete","placeholder","useState","request","setRequest","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","nextParams","query","useEffect","renderMovies","searchMovies","results","length","Notiflix","e","preventDefault","trim","currentTarget","toLowerCase","MoviesList","message","API_KEY","axios","api_key","getTrendingMovies","data","console","log","params","getFullMovie","movieId","getCast","cast","getReviews"],"sourceRoot":""}